OBJECT Modification "Sales Price Calc. Mgt."(Codeunit 7000)
{
  OBJECT-PROPERTIES
  {
    Date=20210924D;
    Time=184001.527T;
    Modified=true;
    Version List=NAVW114.06;
  }
  PROPERTIES
  {
    Target="Sales Price Calc. Mgt."(Codeunit 7000);
  }
  CHANGES
  {
    { CodeModification  ;OriginalCode=BEGIN
                                        if not ToSalesPrice.IsTemporary then
                                          Error(TempTableErr);

                                        #4..10
                                        with FromSalesPrice do begin
                                          SetRange("Item No.",ItemNo);
                                          SetFilter("Variant Code",'%1|%2',VariantCode,'');
                                          SetFilter("Ending Date",'%1|>=%2',0D,StartingDate);
                                          if not ShowAll then begin
                                            SetFilter("Currency Code",'%1|%2',CurrencyCode,'');
                                            if UOM <> '' then
                                        #18..47
                                        OnAfterFindSalesPrice(
                                          ToSalesPrice,FromSalesPrice,QtyPerUOM,Qty,CustNo,ContNo,CustPriceGrCode,CampaignNo,
                                          ItemNo,VariantCode,UOM,CurrencyCode,StartingDate,ShowAll);
                                      END;

                         ModifiedCode=BEGIN
                                        #1..13
                                            SetFilter("Ending Date",'%1|>=%2',0D,StartingDate);
                                        #15..50
                                      END;

                         Target=FindSalesPrice(PROCEDURE 16) }
    { PropertyDeletion  ;Target=ServLinePriceExists(PROCEDURE 37);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=ServLineLineDiscExists(PROCEDURE 35);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=CopyJobItemPriceToJobPlanLine(PROCEDURE 63);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=CopyJobResPriceToJobPlanLine(PROCEDURE 62);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=JobPlanningLineFindJobResPrice(PROCEDURE 67);
                         Property=Local;
                         OriginalValue=Yes }
    { CodeModification  ;OriginalCode=BEGIN
                                        case PriceType of
                                          PriceType::Resource:
                                            begin
                                        #4..8
                                          PriceType::"Group(Resource)":
                                            begin
                                              JobResPrice.SetRange(Type,JobResPrice.Type::"Group(Resource)");
                                              JobResPrice.SetRange(Code,Res."Resource Group No.");
                                              exit(FindJobResPrice(JobResPrice,JobPlanningLine."Work Type Code"));
                                            end;
                                          PriceType::All:
                                            begin
                                              JobResPrice.SetRange(Type,JobResPrice.Type::All);
                                              JobResPrice.SetRange(Code);
                                              exit(FindJobResPrice(JobResPrice,JobPlanningLine."Work Type Code"));
                                            end;
                                        end;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..11
                                              JobResPrice.SetRange("Work Type Code");
                                              JobResPrice.SetRange(Code,Res."Resource Group No.");
                                              exit(JobResPrice.Find('-'));
                                        #14..17
                                              JobResPrice.SetRange("Work Type Code");
                                              JobResPrice.SetRange(Code);
                                              exit(JobResPrice.Find('-'));
                                            end;
                                        end;
                                      END;

                         Target=JobPlanningLineFindJobResPrice(PROCEDURE 67) }
    { PropertyDeletion  ;Target=CopyJobGLAccPriceToJobPlanLine(PROCEDURE 38);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=JobJnlLineFindJobResPrice(PROCEDURE 46);
                         Property=Local;
                         OriginalValue=Yes }
    { CodeModification  ;OriginalCode=BEGIN
                                        case PriceType of
                                          PriceType::Resource:
                                            begin
                                        #4..8
                                          PriceType::"Group(Resource)":
                                            begin
                                              JobResPrice.SetRange(Type,JobResPrice.Type::"Group(Resource)");
                                              JobResPrice.SetRange(Code,Res."Resource Group No.");
                                              exit(FindJobResPrice(JobResPrice,JobJnlLine."Work Type Code"));
                                            end;
                                          PriceType::All:
                                            begin
                                              JobResPrice.SetRange(Type,JobResPrice.Type::All);
                                              JobResPrice.SetRange(Code);
                                              exit(FindJobResPrice(JobResPrice,JobJnlLine."Work Type Code"));
                                            end;
                                        end;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..11
                                              JobResPrice.SetRange("Work Type Code");
                                              JobResPrice.SetRange(Code,Res."Resource Group No.");
                                              exit(JobResPrice.Find('-'));
                                        #14..17
                                              JobResPrice.SetRange("Work Type Code");
                                              JobResPrice.SetRange(Code);
                                              exit(JobResPrice.Find('-'));
                                            end;
                                        end;
                                      END;

                         Target=JobJnlLineFindJobResPrice(PROCEDURE 46) }
    { PropertyDeletion  ;Target=CopyJobResPriceToJobJnlLine(PROCEDURE 47);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=CopyJobGLAccPriceToJobJnlLine(PROCEDURE 48);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=JobJnlLineFindJTPrice(PROCEDURE 42);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=CopyJobItemPriceToJobJnlLine(PROCEDURE 43);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=FindJobPlanningLineLineDisc(PROCEDURE 39);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=JobPlanningLineLineDiscExists(PROCEDURE 49);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=FindJobJnlLineLineDisc(PROCEDURE 58);
                         Property=Local;
                         OriginalValue=Yes }
    { PropertyDeletion  ;Target=JobJnlLineLineDiscExists(PROCEDURE 57);
                         Property=Local;
                         OriginalValue=Yes }
    { Deletion          ;Target=FindJobResPrice(PROCEDURE 70);
                         ChangedElements=PROCEDURECollection
                         {
                           [LineStart(398742)]
                           LOCAL PROCEDURE FindJobResPrice@70(VAR JobResPrice@1000 : Record "Job Resource Price";WorkTypeCode@1001 : Code[10]) : Boolean;
                           BEGIN
                             JobResPrice.SetRange("Work Type Code",WorkTypeCode);
                             if JobResPrice.FindFirst then
                               exit(true);
                             JobResPrice.SetRange("Work Type Code",'');
                             exit(JobResPrice.FindFirst);
                           END;

                         }
                          }
  }
  CODE
  {

    BEGIN
    END.
  }
}

