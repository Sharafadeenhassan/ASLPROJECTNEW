OBJECT Modification "Item Jnl.-Check Line"(Codeunit 21)
{
  OBJECT-PROPERTIES
  {
    Date=20210923D;
    Time=144923.397T;
    Modified=true;
    Version List=NAVW114.06;
  }
  PROPERTIES
  {
    Target="Item Jnl.-Check Line"(Codeunit 21);
  }
  CHANGES
  {
    { CodeModification  ;OriginalCode=BEGIN
                                        RunCheck(Rec);
                                      END;

                         ModifiedCode=BEGIN
                                        RunCheck(Rec);
                                        NegCheck(Rec);   //AAA Feb 2002
                                      END;

                         Target=OnRun }
    { CodeModification  ;OriginalCode=BEGIN
                                        GLSetup.Get;
                                        InvtSetup.Get;

                                        #4..67
                                              then
                                                Error(Text007)
                                            end else begin
                                              if ("Quantity (Base)" = 0) and ("Invoiced Qty. (Base)" = 0) then
                                                Error(Text007);
                                            end;
                                            TestField("Qty. (Calculated)",0);
                                            TestField("Qty. (Phys. Inventory)",0);
                                        #76..80
                                            TestField("Setup Time",0);
                                            TestField("Stop Time",0);
                                            TestField("Output Quantity",0);
                                            TestField("Scrap Quantity",0);
                                          end;

                                          if "Applies-from Entry" <> 0 then begin
                                        #88..133
                                        end;

                                        OnAfterCheckItemJnlLine(ItemJnlLine,CalledFromInvtPutawayPick,CalledFromAdjustment);
                                      END;

                         ModifiedCode=BEGIN
                                        #1..70
                                              {IF ("Quantity (Base)" = 0) AND ("Invoiced Qty. (Base)" = 0) THEN
                                                ERROR(Text007);}
                                        #73..83
                                            //TESTFIELD("Scrap Quantity",0); //CODEWARE
                                        #85..136
                                      END;

                         Target=RunCheck(PROCEDURE 1) }
    { Insertion         ;InsertAfter=OnAfterCheckItemJnlLine(PROCEDURE 6);
                         ChangedElements=PROCEDURECollection
                         {
                           [LineStart(185566)]
                           PROCEDURE NegCheck@1000000000(VAR ItemJnlLine@1000000001 : Record "Item Journal Line");
                           BEGIN
                             // AAA Modified
                             //Inserted by Nancy, to disallow Negative Inventory

                             if (ItemJnlLine."Entry Type" = ItemJnlLine."Entry Type"::Sale) or
                                (ItemJnlLine."Entry Type" = ItemJnlLine."Entry Type"::"Negative Adjmt.") then
                             //IF ItemJnlLine."Document Type" <> 3  THEN
                             begin
                               Item.Get(ItemJnlLine."Item No.");
                               Item.SetRange(Item."Global Dimension 2 Filter",ItemJnlLine."Shortcut Dimension 2 Code");
                               Item.SetRange(Item."Location Filter",ItemJnlLine."Location Code");
                               Item.SetRange(Item."Variant Filter",ItemJnlLine."Variant Code");
                               Item.CalcFields(Inventory);
                               if Item.Inventory <=0 then
                                 Error('Item No. %1, is not in Inventory at\'+
                                        ' Location '+'"%2."', Item."No.",ItemJnlLine."Location Code");
                               if Item.Inventory < ItemJnlLine.Quantity then
                                 Error('Quantity is more than Inventory in Item No. %1.\'+
                                        'at Location '+'"%2."',Item."No.",ItemJnlLine."Location Code");
                             end;

                             if (ItemJnlLine."Entry Type" = ItemJnlLine."Entry Type"::"Positive Adjmt.") then
                             begin
                               if (ItemJnlLine.Quantity<0) then Error (
                                'Quantity Should be not be Negative\'+'in Line No. %1', ItemJnlLine."Line No.");
                             end;
                             //Nancy End
                           END;

                         }
                          }
    { Insertion         ;InsertAfter=UseInTransitLocationErr(Variable 1024);
                         ChangedElements=VariableCollection
                         {
                           "--------"@1026 : Integer;
                           Item@1025 : Record Item;
                         }
                          }
  }
  CODE
  {

    BEGIN
    END.
  }
}

