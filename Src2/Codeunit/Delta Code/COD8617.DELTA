OBJECT Modification "Config. Validate Management"(Codeunit 8617)
{
  OBJECT-PROPERTIES
  {
    Date=20200302D;
    Time=120000T;
    Version List=NAVW114.11;
  }
  PROPERTIES
  {
    Target="Config. Validate Management"(Codeunit 8617);
  }
  CHANGES
  {
    { Deletion          ;Target=EvaluateValueToDate(PROCEDURE 42).Decimal(Variable 1003);
                         ChangedElements=VariableCollection
                         {
                           Decimal@1003 : Decimal;
                         }
                          }
    { CodeModification  ;OriginalCode=BEGIN
                                        if not Evaluate(Date,Value) and not Evaluate(Date,Value,XMLFormat) then
                                          if not Evaluate(Decimal,Value) or not Evaluate(Date,Format(DT2Date(OADateToDateTime(Decimal)))) then
                                            exit(StrSubstNo(Text003,Value,Format(Field.Type::Date)));

                                        if Validate then
                                          FieldRef.Validate(Date)
                                        else
                                          FieldRef.Value := Date;
                                      END;

                         ModifiedCode=BEGIN
                                        if not Evaluate(Date,Value) and not Evaluate(Date,Value,XMLFormat) then
                                          exit(StrSubstNo(Text003,Value,Format(Field.Type::Date)));
                                        #4..8
                                      END;

                         Target=EvaluateValueToDate(PROCEDURE 42) }
    { Deletion          ;Target=EvaluateValueToTime(PROCEDURE 58).Decimal(Variable 1003);
                         ChangedElements=VariableCollection
                         {
                           Decimal@1003 : Decimal;
                         }
                          }
    { CodeModification  ;OriginalCode=BEGIN
                                        if not Evaluate(Time,Value) and not Evaluate(Time,Value,XMLFormat) then
                                          if not Evaluate(Decimal,Value) or not Evaluate(Time,Format(DT2Time(OADateToDateTime(Decimal)))) then
                                            exit(StrSubstNo(Text003,Value,Format(Field.Type::Time)));

                                        if Validate then
                                          FieldRef.Validate(Time)
                                        else
                                          FieldRef.Value := Time;
                                      END;

                         ModifiedCode=BEGIN
                                        if not Evaluate(Time,Value) and not Evaluate(Time,Value,XMLFormat) then
                                          exit(StrSubstNo(Text003,Value,Format(Field.Type::Time)));
                                        #4..8
                                      END;

                         Target=EvaluateValueToTime(PROCEDURE 58) }
    { Deletion          ;Target=OADateToDateTime(PROCEDURE 14);
                         ChangedElements=PROCEDURECollection
                         {
                           [LineStart(425060)]
                           LOCAL PROCEDURE OADateToDateTime@14(DateTimeDecimal@1000 : Decimal) : DateTime;
                           VAR
                             DotNetDateTime@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTime";
                             DotNetDateTimeKind@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTimeKind";
                           BEGIN
                             DotNetDateTime := DotNetDateTime.FromOADate(DateTimeDecimal);
                             exit(
                               DotNetDateTime.DateTime(DotNetDateTime.Ticks,DotNetDateTimeKind.Local));
                           END;

                         }
                          }
  }
  CODE
  {

    BEGIN
    END.
  }
}

